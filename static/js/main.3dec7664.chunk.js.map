{"version":3,"sources":["components/TodoFilter/TodoFilter.tsx","components/TodoList/TodoList.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Todos","TodoList","todos","onSelectTodo","onClosedTodo","useState","currentTodoId","setCurrentTodoId","className","map","todo","id","completed","title","type","onClick","handleClick","classNames","TodoFilter","onUploadedTodos","onCurrentTodos","query","setQuery","All","filter","setFilter","filteredTodos","useMemo","fixedTitle","toLocaleLowerCase","fixedQuery","isActive","Active","isCompleted","Completed","includes","filterTodos","useEffect","onChange","event","newFilter","target","value","placeholder","newQuery","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","onResetTodo","user","setUser","isUserLoaded","setIsUserLoaded","fetchUser","a","userId","currentUser","href","name","App","isLoaded","setIsLoaded","todosFromServer","setTodos","selectedTodo","setSelectedTodo","setFilteredTodos","hasError","setHasError","fetchTodos","uploadedTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3dec7664.chunk.js","sourcesContent":["import { useEffect, useMemo, useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  onUploadedTodos: Todo[];\n  onCurrentTodos: (todos: Todo[]) => void;\n}\n\nenum Todos {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n\nconst filterTodos = (todos: Todo[], filter: Todos, query: string) => {\n  return todos.filter((todo) => {\n    const fixedTitle = todo.title.toLocaleLowerCase();\n    const fixedQuery = query.toLocaleLowerCase();\n\n    const isActive = filter === Todos.Active && !todo.completed;\n    const isCompleted = filter === Todos.Completed && todo.completed;\n\n    if (query === '') {\n      return (filter === Todos.All || isActive || isCompleted);\n    }\n\n    return (filter === Todos.All || isActive || isCompleted)\n      && fixedTitle.includes(fixedQuery);\n  });\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  onUploadedTodos,\n  onCurrentTodos,\n}) => {\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState(Todos.All);\n\n  const handleStatusSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const newFilter = event.target.value as Todos;\n\n    setFilter(newFilter);\n  };\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newQuery = event.target.value;\n\n    setQuery(newQuery);\n  };\n\n  const handleReset = () => {\n    setQuery('');\n  };\n\n  const filteredTodos = useMemo(() => {\n    return filterTodos(onUploadedTodos, filter, query);\n  }, [onUploadedTodos, filter, query]);\n\n  useEffect(() => {\n    onCurrentTodos(filteredTodos);\n  }, [filteredTodos]);\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select data-cy=\"statusSelect\" onChange={handleStatusSelect}>\n            <option value={Todos.All}>All</option>\n            <option value={Todos.Active}>Active</option>\n            <option value={Todos.Completed}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInput}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query\n           && (\n             // eslint-disable-next-line jsx-a11y/control-has-associated-label\n             <button\n               data-cy=\"clearSearchButton\"\n               type=\"button\"\n               className=\"delete\"\n               onClick={handleReset}\n             />\n           )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  onSelectTodo: (todo: Todo) => void;\n  onClosedTodo: Todo | null;\n}\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  onSelectTodo,\n  onClosedTodo,\n}) => {\n  const [currentTodoId, setCurrentTodoId] = useState(0);\n\n  const handleClick = (todo: Todo) => {\n    setCurrentTodoId(todo.id);\n    onSelectTodo(todo);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos\n          .map((todo) => (\n            <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n              <td className=\"is-vcentered\">{todo.id}</td>\n              <td className=\"is-vcentered\">\n                {todo.completed\n                  && (\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={`has-text-${todo.completed ? 'success' : 'danger'}`}>\n                  {todo.title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => handleClick(todo)}\n                >\n                  <span className=\"icon\">\n                    <i className={\n                      classNames('far',\n                        {\n                          'fa-eye': true,\n                          'fa-eye-slash': currentTodoId === todo.id\n                            && onClosedTodo,\n                        })\n                    }\n                    />\n                  </span>\n                </button>\n              </td>\n            </tr>\n          ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo | null;\n  onResetTodo: (Todo: null) => void;\n}\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  onResetTodo,\n}) => {\n  const [user, setUser] = useState<User>();\n  const [isUserLoaded, setIsUserLoaded] = useState(false);\n\n  useEffect(() => {\n    const fetchUser = async () => {\n      if (todo) {\n        const currentUser = await getUser(todo.userId);\n\n        setUser(currentUser);\n      }\n\n      setIsUserLoaded(true);\n    };\n\n    fetchUser();\n  }, [todo]);\n\n  const handleReset = () => {\n    onResetTodo(null);\n  };\n\n  const { id, title, completed } = todo ?? {};\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!isUserLoaded ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={handleReset}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              <strong className={`has-text-${completed ? 'success' : 'danger'}`}>\n                {completed ? 'Done' : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user && user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [todosFromServer, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filteredTodos, setFilteredTodos] = useState<Todo[]>([]);\n  const [hasError, setHasError] = useState(false);\n\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const uploadedTodos = await getTodos();\n\n        setTodos(uploadedTodos);\n        setFilteredTodos(uploadedTodos);\n      } catch {\n        setHasError(true);\n      } finally {\n        setIsLoaded(true);\n      }\n    };\n\n    fetchTodos();\n  }, []);\n\n  const handleTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                onUploadedTodos={todosFromServer}\n                onCurrentTodos={setFilteredTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {hasError\n                && <span>Error 404. Please try later.</span>}\n              {isLoaded\n                ? !hasError && (\n                  <TodoList\n                    todos={filteredTodos}\n                    onSelectTodo={handleTodo}\n                    onClosedTodo={selectedTodo}\n                  />\n                )\n                : <Loader />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo\n        && (\n          <TodoModal\n            todo={selectedTodo}\n            onResetTodo={setSelectedTodo}\n          />\n        )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}